import React from 'react'
import Masonry from 'react-masonry-css'

import { theme } from '~/stitches.config'
import text from '~/styles/text'

enum InterestCategory {
  Book = 'book',
  Arts = 'arts',
  Topic = 'topic',
  Group = 'group',
}

type Interest = {
  title: string
  subtitle?: string
  body: string
  category: InterestCategory
}

const InterestStyle: {
  [K in InterestCategory]: {
    Icon: React.ReactElement
    color: any
    borderColor: any
  }
} = {
  [InterestCategory.Arts]: {
    Icon: (
      <svg
        width="20"
        height="20"
        viewBox="0 0 20 20"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M15.7487 6.24642C16.2636 5.80383 16.7544 5.33454 17.2192 4.84059C17.5273 4.51317 17.824 4.17492 18.1087 3.82642C18.2804 3.60382 18.3632 3.32542 18.3412 3.04521C18.3191 2.76501 18.1938 2.50297 17.9896 2.30991C17.7853 2.11685 17.5166 2.00652 17.2356 2.00034C16.9546 1.99415 16.6813 2.09254 16.4687 2.27642C16.1307 2.58702 15.8001 2.90541 15.4771 3.23133C14.99 3.72288 14.5202 4.23155 14.0687 4.75642C14.0451 4.78312 14.0217 4.80971 13.9985 4.83622C13.806 5.05617 13.628 5.2696 13.4645 5.4827C13.4559 5.49394 13.4473 5.50518 13.4387 5.51642C13.4388 5.51637 13.4387 5.51646 13.4387 5.51642C13.3769 5.59118 13.316 5.6654 13.2562 5.73871C12.9572 6.10546 12.6849 6.45279 12.444 6.76888C12.2723 6.99417 12.1166 7.20359 11.9787 7.39286C11.9309 7.45848 11.8852 7.52168 11.8417 7.58227C11.8407 7.58366 11.8397 7.58504 11.8387 7.58642L12.7987 8.56642C12.8679 8.51811 12.9363 8.46994 13.0041 8.42192C13.218 8.27031 13.425 8.1202 13.6254 7.97195C13.9961 7.69764 14.344 7.42971 14.6702 7.17045C14.7823 7.08139 14.8918 6.99334 14.9987 6.90642C15.002 6.90354 15.0052 6.90067 15.0085 6.8978C15.0146 6.89242 15.0207 6.88705 15.0267 6.8817C15.1107 6.80769 15.1936 6.73568 15.2754 6.66462C15.279 6.66147 15.2826 6.65833 15.2863 6.65519C15.2871 6.65447 15.2879 6.65376 15.2887 6.65304C15.4354 6.52572 15.5787 6.4013 15.7186 6.27395C15.7287 6.26479 15.7387 6.25561 15.7487 6.24642ZM14.8629 8.28792C14.5883 8.49986 14.3133 8.70619 14.0373 8.90787C14.019 8.92125 14.0007 8.93461 13.9824 8.94795C13.8523 9.04265 13.7221 9.13634 13.5916 9.22911C13.5181 9.28136 13.4445 9.33332 13.3708 9.385C13.3701 9.38547 13.3694 9.38594 13.3687 9.38642L12.9087 9.71642C12.8297 10.1867 12.6601 10.6325 12.4134 11.0311C12.3464 11.1394 12.2737 11.2442 12.1956 11.345C12.1949 11.3461 12.1941 11.3471 12.1933 11.3481C12.0103 11.5839 11.7977 11.7981 11.559 11.9848C11.5559 11.9872 11.5528 11.9896 11.5497 11.992C10.8273 12.5533 9.92036 12.8225 9.00875 12.7464C8.88843 12.748 8.76815 12.7413 8.64875 12.7264L8.64535 12.726L7.86875 12.6364L7.75875 11.8564C7.65066 11.2938 7.66623 10.7144 7.80437 10.1584C7.94251 9.60236 8.19992 9.08304 8.55875 8.63642C8.80385 8.36567 9.08611 8.13495 9.39513 7.94994C9.7899 7.71358 10.2283 7.55181 10.6887 7.47642L11.0287 7.00642C11.0286 7.00658 11.0289 7.00625 11.0287 7.00642C11.0917 6.91748 11.1626 6.81844 11.2405 6.71125C11.2407 6.71097 11.2409 6.71068 11.2411 6.7104C11.3081 6.61817 11.3805 6.51955 11.4581 6.41513C11.6106 6.20991 11.7833 5.98232 11.975 5.73697C12.1765 5.47915 12.3989 5.20172 12.6408 4.91001C12.6496 4.89944 12.6584 4.88885 12.6672 4.87825C12.6677 4.87764 12.6682 4.87703 12.6687 4.87642C12.8287 4.66642 13.0287 4.42642 13.2487 4.17642C12.9687 3.99642 12.6887 3.82642 12.4087 3.66642C12.3994 3.66064 12.39 3.65488 12.3806 3.64915C12.0873 3.47011 11.7838 3.31164 11.4725 3.17415C10.0985 2.56743 8.5701 2.3694 7.07326 2.61664C5.22636 2.9217 3.55197 3.88409 2.35875 5.32642C0.298748 7.96642 0.598747 11.4064 3.13875 14.0664C4.17969 15.2644 5.46112 16.2299 6.89973 16.9001C8.33834 17.5703 9.9019 17.9302 11.4887 17.9564C12.4252 17.959 13.3575 17.8311 14.2587 17.5764C14.4371 17.5306 14.5998 17.4378 14.73 17.3076C14.8601 17.1775 14.953 17.0147 14.9987 16.8364C15.0429 16.6543 15.0393 16.4639 14.9886 16.2835C14.9378 16.1031 14.8414 15.9388 14.7087 15.8064C14.1599 15.3277 13.7667 14.6958 13.5796 13.992C13.4884 13.649 13.4482 13.2965 13.4586 12.9456C13.4695 12.5765 13.5364 12.2091 13.6587 11.8564C13.7414 11.62 13.8583 11.4178 14.009 11.2501C14.1304 11.1151 14.2737 11.0025 14.4389 10.9123C14.4447 10.9091 14.4506 10.9059 14.4566 10.9028C14.534 10.8616 14.6161 10.8253 14.7029 10.7939C14.7789 10.7664 14.8584 10.7426 14.9415 10.7226C15.404 10.611 15.9772 10.6152 16.6587 10.7364C16.8501 10.7697 17.0469 10.7496 17.2274 10.6782C17.408 10.6068 17.5654 10.4869 17.6823 10.3318C17.7991 10.1767 17.8709 9.99239 17.8897 9.79911C17.9085 9.60583 17.8735 9.41112 17.7887 9.23642C17.7032 9.05215 17.6125 8.87048 17.5168 8.69161C17.3564 8.39192 17.1819 8.10008 16.9939 7.81708C16.8084 7.53796 16.6099 7.26742 16.3987 7.00642C16.2889 7.10842 16.1729 7.21042 16.0459 7.32208L15.9387 7.41642L15.6587 7.65642C15.6486 7.6647 15.6384 7.67297 15.6283 7.68124C15.3733 7.88881 15.1183 8.09079 14.8629 8.28792ZM8.41146 14.7123L6.69623 14.5144C7.03218 14.7271 7.3822 14.9185 7.74431 15.0872C8.92432 15.6369 10.2064 15.933 11.5079 15.9565C11.7526 15.9567 11.9969 15.9459 12.24 15.924C11.98 15.4829 11.7797 15.0061 11.6467 14.5058C11.6267 14.4304 11.6082 14.3547 11.5914 14.2787C10.7626 14.6443 9.85187 14.8078 8.93552 14.7465C8.76035 14.745 8.58538 14.7336 8.41146 14.7123ZM6.05063 14.0665L5.78458 12.1799C5.63294 11.3494 5.65971 10.4959 5.86338 9.67614C6.07144 8.83867 6.45915 8.05647 6.99962 7.38377L7.03652 7.33784L7.07606 7.29417C7.7352 6.56607 8.56832 6.02544 9.49064 5.71847C9.67061 5.4671 9.89619 5.15956 10.1637 4.80993C9.28007 4.51461 8.33139 4.43592 7.39919 4.5899C6.03778 4.81477 4.80266 5.52083 3.91819 6.57911C2.56831 8.32948 2.6428 10.651 4.58521 12.6852L4.61765 12.7192L4.64846 12.7546C5.07054 13.2404 5.54067 13.6797 6.05063 14.0665ZM10.1251 8.69513C9.85518 8.81997 9.5767 9.00091 9.3388 9.26314C9.32568 9.2776 9.31268 9.29232 9.29981 9.30728C9.19093 9.43389 9.09148 9.57852 9.00646 9.74371C8.9836 9.78813 8.96178 9.83403 8.9411 9.88147C8.87322 10.0372 8.81761 10.2095 8.77774 10.4002C8.7564 10.5022 8.73956 10.6095 8.72775 10.7223C8.69846 11.0021 8.70012 11.3159 8.74077 11.6678C8.74266 11.6841 8.74463 11.7006 8.74669 11.7171C8.74737 11.7225 8.74805 11.728 8.74875 11.7334C8.74875 11.7334 8.75368 11.7339 8.76317 11.7347C8.7659 11.735 8.76901 11.7352 8.77249 11.7355C8.80927 11.7384 8.88723 11.7433 8.99547 11.7437C9.02557 11.7438 9.058 11.7436 9.09253 11.7429C9.26842 11.7392 9.49892 11.723 9.75304 11.6756C9.91765 11.645 10.0922 11.6013 10.2682 11.5396C10.4186 11.4868 10.5702 11.4208 10.7175 11.3385C10.7915 11.2972 10.8645 11.2518 10.9357 11.2018C11.2363 10.991 11.5064 10.6999 11.6959 10.2986C11.7978 10.0828 11.8764 9.8351 11.9239 9.55092C11.932 9.50245 11.9392 9.45292 11.9454 9.4023C11.9559 9.31774 11.9637 9.23014 11.9687 9.13942L11.2597 8.41742C11.2597 8.41742 11.1435 8.41869 10.9606 8.44668C10.9262 8.45194 10.8895 8.45815 10.8507 8.46547C10.6484 8.50367 10.3909 8.57221 10.1251 8.69513Z"
          fill="#BC744D"
        />
      </svg>
    ),
    color: theme.colors.rust,
    borderColor: theme.colors.rust50,
  },
  [InterestCategory.Book]: {
    Icon: (
      <svg
        width="20"
        height="20"
        viewBox="0 0 20 20"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M1.94662 4.37793C3.10229 3.61011 4.62136 3.16669 6.25 3.16669C7.63018 3.16669 8.93167 3.48514 10 4.0496C11.0683 3.48514 12.3698 3.16669 13.75 3.16669C15.3795 3.16669 16.8978 3.61015 18.0534 4.37793C18.3323 4.56326 18.5 4.87594 18.5 5.21085V16.0442C18.5 16.4127 18.2973 16.7513 17.9726 16.9255C17.6478 17.0996 17.2536 17.081 16.9466 16.8771C16.1556 16.3516 15.0321 16 13.75 16C12.4686 16 11.3444 16.3516 10.5534 16.8771C10.2181 17.0999 9.78191 17.0999 9.44662 16.8771C8.65563 16.3516 7.53136 16 6.25 16C4.96864 16 3.84437 16.3516 3.05338 16.8771C2.74644 17.081 2.35221 17.0996 2.02744 16.9255C1.70268 16.7513 1.5 16.4127 1.5 16.0442V5.21085C1.5 4.87594 1.66766 4.56326 1.94662 4.37793ZM9 5.78396C8.2559 5.40562 7.30633 5.16669 6.25 5.16669C5.19367 5.16669 4.2441 5.40562 3.5 5.78396V14.4503C4.34129 14.1586 5.27606 14 6.25 14C7.22394 14 8.15871 14.1586 9 14.4503V5.78396ZM11 14.4503C11.8413 14.1586 12.7761 14 13.75 14C14.7244 14 15.6589 14.1586 16.5 14.4502V5.78393C15.7561 5.40559 14.8069 5.16669 13.75 5.16669C12.6937 5.16669 11.7441 5.40562 11 5.78396V14.4503Z"
          fill="#408252"
        />
      </svg>
    ),
    color: theme.colors.forest,
    borderColor: theme.colors.forest50,
  },
  [InterestCategory.Topic]: {
    Icon: (
      <svg
        width="16"
        height="16"
        viewBox="0 0 16 16"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M5.01542 10.0506L4.96673 12.0982C4.96375 12.2231 4.95796 12.3527 4.94882 12.4864C5.50166 11.9337 5.98522 11.3503 6.35426 10.8553L6.9541 10.0506H13.9998V2H2V10.0506H5.01542ZM1.61807 12.0185C1.73325 12.0396 1.85175 12.0506 1.97257 12.0506H2.96729C2.95393 12.6125 2.86642 13.3016 2.62083 14.0506C2.55657 14.2466 2.48148 14.4468 2.39406 14.6498C2.22547 15.0211 2.30977 15.443 2.61324 15.73C2.79869 15.9156 3.03473 16 3.27076 16C3.4225 16 3.55738 15.9662 3.69225 15.8987C5.54681 14.9873 7.11475 13.1814 7.95773 12.0506H14.0272C15.1231 12.0506 15.9998 11.1561 15.9998 10.0759V1.97468C16.0166 0.877637 15.1231 0 14.0441 0H1.97257C0.893559 0 0 0.877637 0 1.97468V10.0759C0 11.0501 0.704645 11.8513 1.61807 12.0185Z"
          fill="#DEA62C"
        />
      </svg>
    ),
    color: theme.colors.mustard,
    borderColor: theme.colors.mustard50,
  },
  [InterestCategory.Group]: {
    Icon: (
      <svg
        width="20"
        height="18"
        viewBox="0 0 20 18"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M1.10246 11.7692C1.91511 10.9565 3.01731 10.5 4.16658 10.5H10.8333C11.9825 10.5 13.0847 10.9565 13.8974 11.7692C14.71 12.5819 15.1666 13.6841 15.1666 14.8333V16.5C15.1666 17.0523 14.7189 17.5 14.1666 17.5C13.6143 17.5 13.1666 17.0523 13.1666 16.5V14.8333C13.1666 14.2145 12.9208 13.621 12.4832 13.1834C12.0456 12.7458 11.4521 12.5 10.8333 12.5H4.16658C3.54775 12.5 2.95425 12.7458 2.51667 13.1834C2.07908 13.621 1.83325 14.2145 1.83325 14.8333V16.5C1.83325 17.0523 1.38554 17.5 0.833252 17.5C0.280967 17.5 -0.166748 17.0523 -0.166748 16.5V14.8333C-0.166748 13.6841 0.289798 12.5819 1.10246 11.7692Z"
          fill="#B0AE7E"
        />
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M7.50008 2.5C6.21142 2.5 5.16675 3.54467 5.16675 4.83333C5.16675 6.122 6.21142 7.16667 7.50008 7.16667C8.78875 7.16667 9.83342 6.122 9.83342 4.83333C9.83342 3.54467 8.78875 2.5 7.50008 2.5ZM3.16675 4.83333C3.16675 2.4401 5.10685 0.5 7.50008 0.5C9.89332 0.5 11.8334 2.4401 11.8334 4.83333C11.8334 7.22657 9.89332 9.16667 7.50008 9.16667C5.10685 9.16667 3.16675 7.22657 3.16675 4.83333Z"
          fill="#B0AE7E"
        />
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M15.6985 11.3583C15.8366 10.8236 16.382 10.502 16.9167 10.6401C17.8464 10.8801 18.67 11.4221 19.2582 12.1809C19.8465 12.9398 20.166 13.8725 20.1667 14.8326L20.1667 16.5C20.1667 17.0523 19.719 17.5 19.1667 17.5C18.6145 17.5 18.1667 17.0523 18.1667 16.5V14.8338C18.1663 14.3169 17.9942 13.8148 17.6775 13.4063C17.3608 12.9977 16.9173 12.7058 16.4167 12.5766C15.882 12.4385 15.5604 11.8931 15.6985 11.3583Z"
          fill="#B0AE7E"
        />
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M12.3645 1.36029C12.5015 0.825269 13.0463 0.502596 13.5813 0.639584C14.5134 0.878244 15.3396 1.42034 15.9296 2.18042C16.5195 2.9405 16.8398 3.87532 16.8398 4.8375C16.8398 5.79969 16.5195 6.7345 15.9296 7.49458C15.3396 8.25466 14.5134 8.79676 13.5813 9.03542C13.0463 9.17241 12.5015 8.84973 12.3645 8.31471C12.2275 7.77968 12.5502 7.23491 13.0852 7.09792C13.5871 6.96941 14.032 6.67751 14.3497 6.26824C14.6673 5.85896 14.8398 5.3556 14.8398 4.8375C14.8398 4.3194 14.6673 3.81604 14.3497 3.40676C14.032 2.99749 13.5871 2.70559 13.0852 2.57708C12.5502 2.4401 12.2275 1.89532 12.3645 1.36029Z"
          fill="#B0AE7E"
        />
      </svg>
    ),
    color: theme.colors.olive,
    borderColor: theme.colors.olive50,
  },
}

const DATA: Interest[] = [
  {
    title: 'A History of Modern Britain',
    subtitle: 'Andrew Marr',
    body: 'I have basically no history education, not even a GCSE. I’ve always read about it on the side but recently I’ve been wanting to learn more about how Britain and its institutions got to where they are today. This book seemed like it will do as a decent summary.',
    category: InterestCategory.Book,
  },
  {
    title: 'Architecture',
    subtitle: 'Just curious',
    body: 'I’m interested in how we got to the current state of architecture. It feels profoundly anti-human.',
    category: InterestCategory.Book,
  },
  {
    title: 'Ceramics',
    subtitle: 'Want to learn',
    body: 'When I was in Istanbul I tried out a ceramics course and loved it. I only did it for a month, but would love to carry it on in the UK either at a studio or at home. \nI don’t really know where to start if I’m doing it at home, so it would be great to hear some guidance on the setup.',
    category: InterestCategory.Arts,
  },
  {
    title: 'Good Economics for Hard Times',
    subtitle: 'Andrew Marr',
    body: 'I’ve been trying to get into economics a little more, especially developmental economics.\nI don’t really have an economic training, but it’s interesting to see how the world works (or rather, how complicated the world is and how simple answers often miss the point).',
    category: InterestCategory.Book,
  },
]

function InterestItem({ title, subtitle, body, category }: Interest) {
  const style = InterestStyle[category]
  return (
    <div style={{ display: 'grid', gap: 15, gridTemplateColumns: '40px 1fr' }}>
      <div
        style={{
          borderRadius: 8,
          width: 40,
          height: 40,
          display: 'flex',
          alignItems: 'center',
          justifyContent: 'center',
          border: `0.5px solid ${style.borderColor}`,
        }}
      >
        {style.Icon}
      </div>
      <div style={{ display: 'grid', gap: 4, height: 'fit-content' }}>
        <h3 className={text()}>{title}</h3>
        {subtitle && (
          <h4
            className={text({
              size: 1,
              weight: 'normal',
              css: { color: '$grey48' },
            })}
          >
            {subtitle}
          </h4>
        )}
        {body.split('\n').map((para) => (
          <p className={text({ size: 2, css: { color: '$grey30' } })}>{para}</p>
        ))}
      </div>
    </div>
  )
}

function UserProfile() {
  return (
    <div
      style={{
        display: 'grid',
        gridTemplateColumns: '300px 1fr',
        gap: 16,

        maxWidth: 1024,
        margin: 'auto',

        marginTop: 32,
      }}
    >
      <div>
        <h1 className={text({ type: 'heading' })}>Jack Weatherilt</h1>
      </div>
      <Masonry
        breakpointCols={2}
        className="interest-masonry"
        columnClassName="my-masonry-grid_column"
        style={{ display: 'flex' }}
      >
        {DATA.map((d) => (
          <InterestItem key={d.title} {...d} />
        ))}
      </Masonry>
    </div>
  )
}

export default UserProfile
